# vim:tw=0:ts=2:sw=2:et:norl
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/doblabs/easy-as-pypi#ðŸ¥§
# License: MIT

---

name: CI tag specialist

on:
  workflow_call:
    inputs:
      head-ref:
        type: string
        default: "HEAD"
        required: false
      inhibit-cascade:
        type: string
        required: false
      ignore-pr-merged-event:
        type: boolean
        required: false
      ignore-pr-merged-number:
        type: number
        default: 0
        required: false

    # Map the workflow outputs to job outputs
    outputs:
      old_inhibit_cascade:
        description: "The old inhibit-cascade value"
        value: ${{ jobs.manage-ci-tags.outputs.old-inhibit-cascade }}
      old_ignore_pr_merged_event:
        description: "The old ignore-pr-merged-event value"
        value: ${{ jobs.manage-ci-tags.outputs.old-ignore-pr-merged-event }}

# ***

jobs:

  manage-ci-tags:
    name: CI tags

    runs-on: ubuntu-latest

    # Map the job outputs to step outputs
    outputs:
      old-inhibit-cascade: "${{
        steps.manage-ci-tag.outputs.old_inhibit_cascade
      }}"
      old-ignore-pr-merged-event: "${{
        steps.manage-ci-tag.outputs.old_ignore_pr_merged_event
      }}"

    strategy:
      matrix:
        include:

          # SAVVY: GHA disallows env use in matrix: "Unrecognized named-value: 'env'."
          # - So we'll hardcode the tag names here.

          - tag_name: "ci-tag-inhibit-cascade"
            # Note that inputs.inhibit-cascade is a string.
            tag_setting: ${{ inputs.inhibit-cascade }}
            output_name: "old_inhibit_cascade"
            skip_if: false

          - tag_name: "ci-tag-ignore-pr-merged-event-${{
              inputs.ignore-pr-merged-number
            }}"
            # Note that inputs.ignore-pr-merged-event is a bool.
            tag_setting: ${{ inputs.ignore-pr-merged-event }}
            output_name: "old_ignore_pr_merged_event"
            skip_if: ${{ inputs.ignore-pr-merged-number == 0 }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.head-ref }}
          # The ci-tags must be on HEAD, or they're invalid
          # (and can be deleted).
          # - We don't delete abandoned tags here, but if we
          #   wanted to, or if we wanted to honor non-HEAD
          #   ci-tags, we'd want the complete history:
          #  fetch-depth: 0

      # ***

      - name: "Manage tag '${{ matrix.tag_name }}'"
        id: manage-ci-tag
        run: |
          >&2 echo "tag name: ${{ matrix.tag_name }}"
          >&2 echo "new value: ${{ matrix.tag_setting }}"
          >&2 echo "skip_if ?: ${{ matrix.skip_if }}"

          if ${{ matrix.skip_if }}; then
            exit 0
          fi

          was_enabled=false

          name_match_head="$(git tag -l --points-at HEAD "${tag_name}")"

          if [ "${name_match_head}" = "${tag_name}" ]; then
            was_enabled=true
          fi

          if [ "${{ matrix.tag_setting }}" = "true" ]; then
            if ! ${was_enabled}; then
              git tag -f "${tag_name}"
              git push -f "origin" "refs/tags/${tag_name}"
            fi
          elif [ "${{ matrix.tag_setting }}" = "false" ]; then
            if ${was_enabled}; then
              git tag -d "${tag_name}"
              git push "origin" ":refs/tags/${tag_name}"
            fi
          fi

          >&2 echo "${{ matrix.output_name }}: ${was_enabled}"

          echo "${{ matrix.output_name }}=${was_enabled}" >> "$GITHUB_OUTPUT"

      # ***
