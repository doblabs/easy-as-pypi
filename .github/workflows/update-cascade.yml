# vim:tw=0:ts=2:sw=2:et:norl
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/doblabs/easy-as-pypi#ðŸ¥§
# License: MIT

---

name: Release Cascade â€” Dispatch

run-name: ðŸ‘£ â€” Cascade â€” 1.) Dispatch ${{
  github.event_name == 'workflow_dispatch' && '(via User)' || '' }}

on:
  # Via release-smoke-test.yml after PyPI release, which doesn't
  # set inputs, b/c we'll read CI tags herein.
  # - Or via update-merged.yml, if nothing new was released (no PR,
  #   no new version tag, no GH or PyPI release or smoke test),
  #   in which case CI tags are not set but these 2 inputs are.
  workflow_call:
    inputs:
      cascade-updatedeps:
        type: boolean
        default: true

      cascade-versioning:
        type: string
        # Use empty string to fallback Git tag value if input not set.
        default: ''

  # Via GitHub Actions website button
  workflow_dispatch:
    inputs:
      cascade-updatedeps:
        description: 'Cascade poetry-update'
        type: boolean
        default: true

      cascade-versioning:
        description: 'Cascade version bump'
        type: choice
        options:
          - 'alpha'
          - 'patch'
          - 'least'
          - 'skip'
        default: 'alpha'

# ***

jobs:
  wrangle-ci-tags:
    name: Wrangle (read) CI tags
    uses: ./.github/workflows/ci-tags-wrangle.yml

  # ***

  identify-downstream-repos:
    name: "Find Cascade repos"

    runs-on: ubuntu-latest

    steps:
      # CXREF: https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # CXREF: https://github.com/marketplace/actions/yq-portable-yaml-processor
      - name: Probe Yaml config
        id: probe_yaml
        uses: mikefarah/yq@master
        # Some notes:
        # - 'cmd' runs in a container (from /github/workspace, per `pwd),
        #   and has `yq` installed, but not same as `pip install yq`. So
        #   different args/behavior, e.g., this `yq` defaults Yaml output,
        #   whereas PyPI `yq` defaults Json.
        #   - Therefore use relative path (not "{{ github.workspace }}/...").
        # - The '--indent 0' simply makes one-line JSON output, easier for
        #   debugging/tracing.
        # - The config file is Yaml so it can be commented (and so we didn't
        #   have to look for an hjson loader to use commented JSON instead).
        # - github.repository is org/repo, e.g., 'doblabs/easy-as-pypi'.
        with:
          cmd: |
            yq -o=json --indent "0" '."${{ github.repository }}"' \
              ".github/doblabs-dependencies.yml"

    outputs:
      probe_yaml_outputs_result: ${{ steps.probe_yaml.outputs.result }}

  # ***

  dispatch-downstream-repos:
    name: Dispatch downstream repos

    needs: [wrangle-ci-tags, identify-downstream-repos]

    # Note that we honor CI tag regardless if workflow_dispatch or workflow_call.
    # - Also note that the 4 CI tags valid if called via release-smoke-test.yml.
    # - Via update-deps.yml, 2 cascade-* args are inputs; and 2 inhibit-* args
    #   unset, where inhibit-cascade known false (b/c cascade-dispatch is true
    #   if workflow_dispatch, or implied if repository_dispatch (otherwise
    #   upstream repo would not have called us)), and inhibit-forever we still
    #   want to check.
    #   - We'll still check HEAD-only ci-inhibit-cascade because why not, user
    #     might have set it themselves.
    if: ${{ true
        && needs.wrangle-ci-tags.outputs.old-inhibit-cascade == 'false'
        && needs.wrangle-ci-tags.outputs.old-inhibit-forever == 'false'
      }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        repo: "${{
          fromJSON(needs.identify-downstream-repos.outputs.probe_yaml_outputs_result)
        }}"

    steps:
      # CXREF: https://github.com/marketplace/actions/repository-dispatch
      - name: Dispatch to "${{ matrix.repo }}"
        uses: peter-evans/repository-dispatch@v2
        with:
          # Personal access token created for *my user* with public_repo permissions.
          token: ${{ secrets.PAT__PUBLIC_REPO }}
          repository: ${{ matrix.repo }}
          event-type: update-deps
          # - The `inputs.cascade-updatedeps && ci-tags.old-cascade-updatedeps`
          #   is because both default true, so if either is set false, use false.
          # - The `inputs.cascade-versioning`, on the other hand, defaults to
          #   the empty string, so fallback CI tag value if not an input
          client-payload: '
            {
              "cascade-updatedeps": "${{
                inputs.cascade-updatedeps
                && needs.wrangle-ci-tags.outputs.old-cascade-updatedeps
              }}",
              "cascade-versioning": "${{
                inputs.cascade-versioning
                || needs.wrangle-ci-tags.outputs.old-cascade-versioning
              }}"
            }'
