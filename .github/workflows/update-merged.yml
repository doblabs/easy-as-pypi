# vim:tw=0:ts=2:sw=2:et:norl
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/doblabs/easy-as-pypi#ðŸ¥§
# License: MIT

---

name: Release Cascade Versioner

on:

  # CXREF:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#
  #          running-your-pull_request-workflow-when-a-pull-request-merges
  # - Note pull_request, not pull_request_target, because (don't need/want) permissions.
  pull_request:
    types:
      - closed

run-name: ðŸ‘£ â€” 3.) Cascade Versioner

# env:
#   # USYNC: https://github.com/actions/python-versions/releases
#   # - USYNC: PYTHON_VERSION usage in .github/workflows/*.
#   PYTHON_VERSION: 3.11

jobs:
  blather:
    name: Blather
    runs-on: ubuntu-latest
    steps:
      - name: Dump github object
        run: echo "${GITHUB_OBJ}"
        shell: bash
        env:
          GITHUB_OBJ: ${{ toJson(github) }}

      # github.event.pull_request.labels
      #   [
      #     {
      #       "color": "74e34f",
      #       "default": false,
      #       "description": "Pull requests that update poetry.lock",
      #       "id": 6167414326,
      #       "name": "poetry.lock",
      #       "node_id": "LA_kwDOJnqmuc8AAAABb5tGNg",
      #       "url":
      #         "https://api.github.com/repos/doblabs/easy-as-pypi/labels/poetry.lock"
      #     }
      #   ],
      - name: Dump PR labels objects
        run: echo "${GITHUB_OBJ}"
        shell: bash
        env:
          GITHUB_OBJ: ${{ toJson(github.event.pull_request.labels) }}

      - name: Dump PR labels names
        run: echo "names ${GITHUB_OBJ}"
        shell: bash
        env:
          GITHUB_OBJ: ${{ toJson(github.event.pull_request.labels.*.name) }}

      - name: Has poetry.lock label
        run: echo "has/1 ${GITHUB_OBJ}"
        shell: bash
        env:
          GITHUB_OBJ: "${{
            contains(github.event.pull_request.labels.*.name, 'poetry.lock')
          }}"

      - name: Has poetry.lock label
        run: |
          echo "has/2 ${{
            contains(github.event.pull_request.labels.*.name, 'poetry.lock')
          }}"
        shell: bash

  # ***

  if_merged:

    if: github.event.pull_request.merged == true
      && contains(github.event.pull_request.labels.*.name, 'poetry.lock')

    runs-on: ubuntu-latest

    steps:
      - run: |
          echo "The PR was merged, and labeled poetry.lock"

      # FIXME: Inspect dump for something to ID PR as update-deps.
      #
      #  pull_request.sender

      - name: Checkout this repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.repository.default_branch }}
          # Fetch all history, so rev-parse HEAD is real HEAD,
          # and we get tag history.
          fetch-depth: 0
          token: ${{ secrets.USER_PAT }}

      - name: Checkout git-bump
        uses: actions/checkout@v3
        with:
          repository: 'landonb/git-bump-version-tag'
          # The branch, tag or SHA to checkout. Defaults to default branch.
          #  ref: ''
          # Relative path under $GITHUB_WORKSPACE to place the repository
          #  path: ''

      # '/home/runner/work/easy-as-pypi/easy-as-pypi/'
      - name: Dump github.workspace
        run: echo "${{ github.workspace }}"

      - name: Dump paths...
        run: |
          echo ls -la "${{ github.workspace }}"
          ls -la "${{ github.workspace }}"
          echo ls -la "/home/runner/work/easy-as-pypi"
          ls -la "/home/runner/work/easy-as-pypi"
          echo ls -la "/home/runner/work"
          ls -la "/home/runner/work"
          #
          echo ls -la "${{ github.workspace }}/easy-as-pypi"
          ls -la "${{ github.workspace }}/easy-as-pypi"
          echo ls -la "${{ github.workspace }}/git-bump-version-tag"
          ls -la "${{ github.workspace }}/git-bump-version-tag"
