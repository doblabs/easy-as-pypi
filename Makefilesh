# vim:tw=0:ts=2:sw=2:noet:ft=sh
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/pydob/ <varies>
# Pattern: https://github.com/pydob/easy-as-pypi#ðŸ¥§
# License: MIT

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

make_develop () {
	local VENV_NAME="$1"
	local VENV_PYVER="$2"
	local VENV_ARGS="$3"
	local EDITABLE_DIR="$4"

	_pyenv_prepare_shell "${VENV_PYVER}"

	# local venv_created=false
	_venv_manage_and_activate "${VENV_NAME}" "${VENV_ARGS}" "${VENV_NAME}"

	pip install -U pip setuptools
	pip install poetry
	poetry self add "poetry-dynamic-versioning[plugin]"

	poetry -C ${EDITABLE_DIR} install --with dist,lint,test,docstyle,docs,extras
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

make_doc8 () {
	local VENV_DOC8="$1"
	local VENV_PYVER="$2"
	local VENV_NAME="$3"

	_pyenv_prepare_shell "${VENV_PYVER}"

	# local venv_created=false
	_venv_manage_and_activate "${VENV_DOC8}" "" "${VENV_NAME}"

	python -c "import doc8" 2> /dev/null \
		|| pip install -U pip doc8>="1.1.1"

	python -m doc8 *.rst docs/
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

_pyenv_prepare_shell () {
	local venv_pyver="$1"

	eval "$(~/.local/bin/pyenv init -)"

	pyenv install -s ${venv_pyver}

	pyenv shell ${venv_pyver}
}

_venv_manage_and_activate () {
	local venv_name="$1"
	local venv_args="$3"
	local venv_default="$2"

	if [ ! -d "${venv_name}" ]; then
		python3 -m venv ${venv_args} "${venv_name}"

		venv_created=true

		if [ -d "${venv_default}" ]; then
			# So that bare `workon` picks the `make develop` virtualenv.
			touch "${venv_default}/bin/activate"
		fi
	fi

	. "${venv_name}/bin/activate"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

