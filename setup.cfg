# This file exists within 'FIXME-proj-name':
#
#   https://github.com/FIXME-user-name/FIXME-proj-name
#
# Copyright © FIXME[-FIXME] Foo Bar. All rights reserved.
#
# Permission is hereby granted,  free of charge,  to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge,  publish,  distribute, sublicense,
# and/or  sell copies  of the Software,  and to permit persons  to whom the
# Software  is  furnished  to do so,  subject  to  the following conditions:
#
# The  above  copyright  notice  and  this  permission  notice  shall  be
# included  in  all  copies  or  substantial  portions  of  the  Software.
#
# THE  SOFTWARE  IS  PROVIDED  "AS IS",  WITHOUT  WARRANTY  OF ANY KIND,
# EXPRESS OR IMPLIED,  INCLUDING  BUT NOT LIMITED  TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE  FOR ANY
# CLAIM,  DAMAGES OR OTHER LIABILITY,  WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE,  ARISING FROM,  OUT OF  OR IN  CONNECTION WITH THE
# SOFTWARE   OR   THE   USE   OR   OTHER   DEALINGS  IN   THE  SOFTWARE.

# """Distributable Python application packaging metadata."""

# (lb): Note that using `-` or `_` in key names is interchangeable, e.g.,
#         long-description is the
# same as long_description.

[metadata]
# NOTE: Values specified in setup.py will shadow those here.
#       (Although there are very few values left in setup().)
name = FIXME-proj-name
author = FIXME-proj-author
author-email = hotoffthehamster+FIXMEprojname@gmail.com
home-page = https://github.com/hotoffthehamster/FIXME-proj-name
description = FIXME-description
long-description = file: README.rst
long-description-content-type = text/x-rst; charset=UTF-8
project_urls =
    # Bug Tracker = https://bugs.launchpad.net/FIXME-proj-name/
    Documentation = https://FIXME-proj-name.readthedocs.io/en/latest/
    Source Code = https://github.com/hotoffthehamster/FIXME-proj-name
license = FIXME-brief-license
license-file = LICENSE
platform = any
# https://pypi.org/classifiers/
classifier =
    License :: OSI Approved :: FIXME-class-license
    Development Status :: FIXME-class-status
    # Choose one of these:
    #  Development Status :: 2 - Pre-Alpha
    #  Development Status :: 3 - Alpha
    #  Development Status :: 4 - Beta
    #  Development Status :: 5 - Production/Stable
    Intended Audience :: FIXME-class-audience
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python
    Topic :: FIXME :: FIXME :: FIXME-class-topic
# Keywords for PyPI to display, and to use for search results.
keywords =
    FIXME-keywords

# FIXME: INCLUDE_ONLY_IF: HAS CLI (see other INCLUDE_ONLY_IFs).
[options.entry_points]
console_scripts =
    # <app>=<pkg>.<cls>.run
    # FIXME = FIXME.FIXME:cli
    FIXME_proj_name = FIXME_proj_name:cli

[options]
# Per docs, try `zip_safe = true` until proven otherwise, i.e., publish
# to PyPI or otherwise install distribution package, and test if your
# project can run from zip file, or if it needs to be installed to a
# directory (generally if it's not purely Pythonic and carries along
# data files or otherwise needs to access its package file).
#
#   Ref: "Setting the zip_safe flag":                              ¶
#
#       https://setuptools.readthedocs.io/en/latest/setuptools.html#setting-the-zip-safe-flag
#
# FIXME: DEV/YOU: A reminder to remove this FIXME (and call it good),
#                 or to disable zip_safe, after test.PyPI pip-install.
#
#           zip_safe = false  # Maybe?
#
zip_safe = true
# Enable setuptools_scm's use_scm_version.
setup_requires =
    setuptools
    setuptools_scm

[coverage:report]
precision = 0
# FIXME: INCLUDE_ONLY_IF: HAS CLI (see other INCLUDE_ONLY_IFs).
exclude_lines =
    if __name__ == .__main__.:

[coverage:run]
branch = True
source = FIXME_proj_name

[doc8]
ignore-path = .eggs/, *.egg-info/, .tox/, docs/_build/, tests/fixtures/MAYBE
max-line-length = 89
# Specify encoding lest doc8 think it's 'Windows-1254' and raise UnicodeDecodeError.
file-encoding = utf-8
# DEVs: Uncomment verbose for TMI.
#  verbose=1

# FIXME: INCLUDE_ONLY_IF: HAS UX (see other INCLUDE_ONLY_IFs).
#
# Babel i18n/l10n configuration.
#
# USAGE:
#
#   pip install Babel
#   python setup.py extract_messages
#
# SEE ALSO:
#
#   http://babel.pocoo.org/en/latest/setup.html#extract-messages
#
[extract_messages]
input_dirs = FIXME_proj_name
output_file = messages.pot

[flake8]
# So that the user can call `flake8`, maintain an exclude list. (Another way
# to lint is via `make lint` or `tox -e flake8`, which call flake8 on exact
# paths, e.g., `flake8 setup.py source/ tests/`. Here we achieve same effect
# but by doing the opposite, being exclusive rather than inclusive.)
exclude =
    # The build directory, if not ignored, has 50 or so lintable files.
    build/
    # Docs' conf.py is modified Sphinx boilerplate. That does not lint.
    docs/conf.py
    # Not ignoring .eggs adds 10 files.
    .eggs/
    # Not ignoring .tox adds tens of Ks files.
    .tox/
    # These directories don't contain any lintable files for flake8 to
    # find, but ignore them anyway to save whatever time globbing takes.
    dist/
    *.egg-info/
    .git/
    htmlcov/
    .pytest_cache/
    __pycache__
max-line-length = 89
# See list of error codes (we can list here to ignore):
#
#   https://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes
#
# - Project-agnostic, universal behavior (that supports and enforces this
#   and similar projects' style guides, i.e., this developer's preferences):
#
#   - ✓ W391: blank line at end of file
#
#       - (lb): Personal preference. So that, e.g., Vim's <C-End> is predictable
#               and goes to first column of an empty last line, rather than to
#               some unknown last column of a nonempty last line.
#
#   - ✓ W503 line break before binary operator
#
#       - (lb): I'm with Knuth, for readability, because columns align.
#
#               Prefer this:
#
#                   if (some_thing
#                       and another
#                       and another_thing):
#
#               over this:
#
#                   if (some_thing and
#                       another and
#                       another_thing):
#
# - Project- and dependency-specific, less common options:
#
#   - ✗ W605 invalid escape sequence:
#
#       - Specific to some Click library usage.
#         - (lb): Was warned on regex, e.g., '\d{2}' was flagged.
#         - (lb): Was warned on escape in Click help string, e.g., 'blah \# blah'.
#
#   - ✗ E711 comparison to None should be 'if cond is None:'
#
#       - Specific to SQLAlchemy library.
#         - (lb): SQLAlchemy filter function honors `== None`, not `is None`, e.g.,
#                   query = query.filter(AlchemyFact.activity == None)
#
ignore = W391,W503

[isort]
# See: setup.cfg's [flake8] max-line-length = 89.
line_length = 89
# multi_line_output: 3 - Vertical Hanging Indent.
multi_line_output = 3
not_skip = __init__.py
known_third_party =
    # SYNC_ME: setup.py:requirements
    # FIXME-list-setup-py-requirements
    # Testing packages
    factory
    faker
    fauxfactory
    freezegun
    # FIXME/2020-01-24: What's 'past' package?
    past
    pytest
    pytest_factoryboy

[tool:pytest]
addopt =
	--tb=short
	--strict
	--rsx

# 2020-01-19: Dropped Python2 support, so do not enable universal:
#   [bdist_wheel]
#   universal = 1
# which has effect, too, of making release named, e.g.,:
#   dist/myapp-3.0.0rc2-py2.py3-none-any.whl
# Without setting, you'll see a pure Python 3 release, e.g.,:
#   dist/myapp-3.0.0rc3-py3-none-any.whl

