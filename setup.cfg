# This file exists within 'easy-as-pypi':
#
#   https://github.com/pydob/easy-as-pypi#ðŸ¥§
#
# Copyright Â© 2020 Landon Bouma. All rights reserved.
#
# Permission is hereby granted,  free of charge,  to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge,  publish,  distribute, sublicense,
# and/or  sell copies  of the Software,  and to permit persons  to whom the
# Software  is  furnished  to do so,  subject  to  the following conditions:
#
# The  above  copyright  notice  and  this  permission  notice  shall  be
# included  in  all  copies  or  substantial  portions  of  the  Software.
#
# THE  SOFTWARE  IS  PROVIDED  "AS IS",  WITHOUT  WARRANTY  OF ANY KIND,
# EXPRESS OR IMPLIED,  INCLUDING  BUT NOT LIMITED  TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE  FOR ANY
# CLAIM,  DAMAGES OR OTHER LIABILITY,  WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE,  ARISING FROM,  OUT OF  OR IN  CONNECTION WITH THE
# SOFTWARE   OR   THE   USE   OR   OTHER   DEALINGS  IN   THE  SOFTWARE.

# """Distributable Python application packaging metadata."""

# (lb): Note that using `-` or `_` in key names is interchangeable, e.g.,
#         long-description is the
# same as long_description.


# FIXME: INCLUDE_ONLY_IF: HAS UX (see other INCLUDE_ONLY_IFs).
#
# Babel i18n/l10n configuration.
#
# USAGE:
#
#   pip install Babel
#   python setup.py extract_messages
#
# SEE ALSO:
#
#   http://babel.pocoo.org/en/latest/setup.html#extract-messages
#
[extract_messages]
input_dirs = easy_as_pypi
output_file = messages.pot

[flake8]
# So that the user can call `flake8`, maintain an exclude list. (Another way
# to lint is via `make lint` or `tox -e flake8`, which call flake8 on exact
# paths, e.g., `flake8 setup.py source/ tests/`. Here we achieve same effect
# but by doing the opposite, being exclusive rather than inclusive.)
exclude =
    # The build directory, if not ignored, has 50 or so lintable files.
    build/
    # Docs' conf.py is modified Sphinx boilerplate. That does not lint.
    docs/conf.py
    docs/_themes/sphinx_rtd_theme/
    # Not ignoring .eggs adds 10 files.
    .eggs/
    # Not ignoring .tox adds tens of Ks files.
    .tox/
    # These directories don't contain any lintable files for flake8 to
    # find, but ignore them anyway to save whatever time globbing takes.
    dist/
    *.egg-info/
    .git/
    htmlcov/
    .pytest_cache/
    __pycache__
max-line-length = 89
# See list of error codes (we can list here to ignore):
#
#   https://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes
#
# - Project-agnostic, universal behavior (that supports and enforces this
#   and similar projects' style guides, i.e., this developer's preferences):
#
#   - âœ“ W391: blank line at end of file
#
#       - (lb): Personal preference. So that, e.g., Vim's <C-End> is predictable
#               and goes to first column of an empty last line, rather than to
#               some unknown last column of a nonempty last line.
#
#   - âœ“ W503 line break before binary operator
#
#       - (lb): I'm with Knuth, for readability, because columns align.
#
#               Prefer this:
#
#                   if (some_thing
#                       and another
#                       and another_thing):
#
#               over this:
#
#                   if (some_thing and
#                       another and
#                       another_thing):
#
# - Project- and dependency-specific, less common options:
#
#   - âœ— W605 invalid escape sequence:
#
#       - Specific to some Click library usage.
#         - (lb): Was warned on regex, e.g., '\d{2}' was flagged.
#         - (lb): Was warned on escape in Click help string, e.g., 'blah \# blah'.
#
#   - âœ— E711 comparison to None should be 'if cond is None:'
#
#       - Specific to SQLAlchemy library.
#         - (lb): SQLAlchemy filter function honors `== None`, not `is None`, e.g.,
#                   query = query.filter(AlchemyFact.activity == None)
#
ignore = W391,W503

